"use strict";(self.webpackChunkblog_vuepress=self.webpackChunkblog_vuepress||[]).push([[6227],{3294:(e,t,a)=>{a.d(t,{a:()=>r});var l=a(3916),s=a(2415),r=(0,s.a)((e,t,a,s)=>{e.attr("class",a);let{width:r,height:o,x:c,y:d}=i(e,t);(0,l.N)(e,o,r,s);let p=n(c,d,r,o,t);e.attr("viewBox",p),l.b.debug(`viewBox configured: ${p} with padding: ${t}`)},"setupViewPortForSVG"),i=(0,s.a)((e,t)=>{let a=e.node()?.getBBox()||{width:0,height:0,x:0,y:0};return{width:a.width+2*t,height:a.height+2*t,x:a.x,y:a.y}},"calculateDimensionsWithPadding"),n=(0,s.a)((e,t,a,l,s)=>`${e-s} ${t-s} ${a} ${l}`,"createViewBox")},4002:(e,t,a)=>{function l(e,t){e.accDescr&&t.setAccDescription?.(e.accDescr),e.accTitle&&t.setAccTitle?.(e.accTitle),e.title&&t.setDiagramTitle?.(e.title)}a.d(t,{a:()=>l}),(0,a(2415).a)(l,"populateCommonDb")},6227:(e,t,a)=>{a.d(t,{diagram:()=>x});var l=a(4002),s=a(455),r=(a(3910),a(831),a(3823),a(543),a(8795),a(552)),i=a(3294),n=a(1833),o=a(1903),c=(a(8179),a(3916)),d=(a(9227),a(7366),a(2466),a(9116),a(5054),a(7909),a(2415)),p=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=c.R,this.getAccTitle=c.S,this.setDiagramTitle=c.V,this.getDiagramTitle=c.W,this.getAccDescription=c.U,this.setAccDescription=c.T}static{(0,d.a)(this,"TreeMapDB")}getNodes(){return this.nodes}getConfig(){let e=c.s,t=(0,c.A)();return(0,o.l)({...e.treemap,...t.treemap??{}})}addNode(e,t){this.nodes.push(e),this.levels.set(e,t),0===t&&(this.outerNodes.push(e),this.root??=e)}getRoot(){return{name:"",children:this.outerNodes}}addClass(e,t){let a=this.classes.get(e)??{id:e,styles:[],textStyles:[]},l=t.replace(/\\,/g,"§§§").replace(/,/g,";").replace(/§§§/g,",").split(";");l&&l.forEach(e=>{(0,n.c)(e)&&(a?.textStyles?a.textStyles.push(e):a.textStyles=[e]),a?.styles?a.styles.push(e):a.styles=[e]}),this.classes.set(e,a)}getClasses(){return this.classes}getStylesForClass(e){return this.classes.get(e)?.styles??[]}clear(){(0,c.Q)(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}};function h(e){if(!e.length)return[];let t=[],a=[];return e.forEach(e=>{let l={name:e.name,children:"Leaf"===e.type?void 0:[]};for(l.classSelector=e?.classSelector,e?.cssCompiledStyles&&(l.cssCompiledStyles=[e.cssCompiledStyles]),"Leaf"===e.type&&void 0!==e.value&&(l.value=e.value);a.length>0&&a[a.length-1].level>=e.level;)a.pop();if(0===a.length)t.push(l);else{let e=a[a.length-1].node;e.children?e.children.push(l):e.children=[l]}"Leaf"!==e.type&&a.push({node:l,level:e.level})}),t}(0,d.a)(h,"buildHierarchy");var m=(0,d.a)((e,t)=>{(0,l.a)(e,t);let a=[];for(let a of e.TreemapRows??[])"ClassDefStatement"===a.$type&&t.addClass(a.className??"",a.styleText??"");for(let l of e.TreemapRows??[]){let e=l.item;if(!e)continue;let s=l.indent?parseInt(l.indent):0,r=y(e),i=e.classSelector?t.getStylesForClass(e.classSelector):[],n=i.length>0?i.join(";"):void 0,o={level:s,name:r,type:e.$type,value:e.value,classSelector:e.classSelector,cssCompiledStyles:n};a.push(o)}let s=h(a),r=(0,d.a)((e,a)=>{for(let l of e)t.addNode(l,a),l.children&&l.children.length>0&&r(l.children,a+1)},"addNodesRecursively");r(s,0)},"populate"),y=(0,d.a)(e=>e.name?String(e.name):"","getItemName"),u={parser:{yy:void 0},parse:(0,d.a)(async e=>{try{let t=await(0,s.a)("treemap",e);c.b.debug("Treemap AST:",t);let a=u.parser?.yy;if(!(a instanceof p))throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");m(t,a)}catch(e){throw c.b.error("Error parsing treemap:",e),e}},"parse")},f={draw:(0,d.a)((e,t,a,l)=>{let s=l.db,o=s.getConfig(),p=o.padding??10,h=s.getDiagramTitle(),m=s.getRoot(),{themeVariables:y}=(0,c.A)();if(!m)return;let u,f=h?30:0,g=(0,r.a)(t),S=o.nodeWidth?10*o.nodeWidth:960,x=o.nodeHeight?10*o.nodeHeight:500,b=S,v=x+f;g.attr("viewBox",`0 0 ${b} ${v}`),(0,c.N)(g,v,b,o.useMaxWidth);try{let e=o.valueFormat||",";if("$0,0"===e)u=(0,d.a)(e=>"$"+(0,c.ja)(",")(e),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){let t=/\.\d+/.exec(e),a=t?t[0]:"";u=(0,d.a)(e=>"$"+(0,c.ja)(","+a)(e),"valueFormat")}else if(e.startsWith("$")){let t=e.substring(1);u=(0,d.a)(e=>"$"+(0,c.ja)(t||"")(e),"valueFormat")}else u=(0,c.ja)(e)}catch(e){c.b.error("Error creating format function:",e),u=(0,c.ja)(",")}let C=(0,c.ma)().range(["transparent",y.cScale0,y.cScale1,y.cScale2,y.cScale3,y.cScale4,y.cScale5,y.cScale6,y.cScale7,y.cScale8,y.cScale9,y.cScale10,y.cScale11]),w=(0,c.ma)().range(["transparent",y.cScalePeer0,y.cScalePeer1,y.cScalePeer2,y.cScalePeer3,y.cScalePeer4,y.cScalePeer5,y.cScalePeer6,y.cScalePeer7,y.cScalePeer8,y.cScalePeer9,y.cScalePeer10,y.cScalePeer11]),$=(0,c.ma)().range([y.cScaleLabel0,y.cScaleLabel1,y.cScaleLabel2,y.cScaleLabel3,y.cScaleLabel4,y.cScaleLabel5,y.cScaleLabel6,y.cScaleLabel7,y.cScaleLabel8,y.cScaleLabel9,y.cScaleLabel10,y.cScaleLabel11]);h&&g.append("text").attr("x",b/2).attr("y",f/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(h);let k=g.append("g").attr("transform",`translate(0, ${f})`).attr("class","treemapContainer"),L=(0,c.ka)(m).sum(e=>e.value??0).sort((e,t)=>(t.value??0)-(e.value??0)),T=(0,c.la)().size([S,x]).paddingTop(e=>e.children&&e.children.length>0?35:0).paddingInner(p).paddingLeft(e=>e.children&&e.children.length>0?10:0).paddingRight(e=>e.children&&e.children.length>0?10:0).paddingBottom(e=>e.children&&e.children.length>0?10:0).round(!0)(L),M=T.descendants().filter(e=>e.children&&e.children.length>0),z=k.selectAll(".treemapSection").data(M).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);z.append("rect").attr("width",e=>e.x1-e.x0).attr("height",25).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>0===e.depth?"display: none;":""),z.append("clipPath").attr("id",(e,a)=>`clip-section-${t}-${a}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",25),z.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>C(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>w(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(0===e.depth)return"display: none;";let t=(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),z.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",12.5).attr("dominant-baseline","middle").text(e=>0===e.depth?"":e.data.name).attr("font-weight","bold").attr("style",e=>0===e.depth?"display: none;":"dominant-baseline: middle; font-size: 12px; fill:"+$(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).each(function(e){if(0===e.depth)return;let t=(0,c.ha)(this),a=e.data.name;t.text(a);let l,s=e.x1-e.x0;l=!1!==o.showValues&&e.value?s-10-30-10-6:s-6-6;let r=Math.max(15,l),i=t.node();if(i.getComputedTextLength()>r){let e="...",l=a;for(;l.length>0;){if(l=a.substring(0,l.length-1),0===l.length){t.text(e),i.getComputedTextLength()>r&&t.text("");break}if(t.text(l+e),i.getComputedTextLength()<=r)break}}}),!1!==o.showValues&&z.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",12.5).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?u(e.value):"").attr("font-style","italic").attr("style",e=>0===e.depth?"display: none;":"text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+$(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:"));let F=T.leaves(),P=k.selectAll(".treemapLeafGroup").data(F).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);P.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?C(e.parent.data.name):C(e.data.name)).attr("style",e=>(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?C(e.parent.data.name):C(e.data.name)).attr("stroke-width",3),P.append("clipPath").attr("id",(e,a)=>`clip-${t}-${a}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4)),P.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>"text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+$(e.data.name)+";"+(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(e,a)=>`url(#clip-${t}-${a})`).text(e=>e.data.name).each(function(e){let t=(0,c.ha)(this),a=e.x1-e.x0,l=e.y1-e.y0,s=t.node(),r=a-8,i=l-8;if(r<10||i<10)return void t.style("display","none");let n=parseInt(t.style("font-size"),10);for(;s.getComputedTextLength()>r&&n>8;)n--,t.style("font-size",`${n}px`);let o=Math.max(6,Math.min(28,Math.round(.6*n))),d=n+2+o;for(;d>i&&n>8&&(n--,o=Math.max(6,Math.min(28,Math.round(.6*n))),!(o<6&&8===n));)t.style("font-size",`${n}px`),d=n+2+o;t.style("font-size",`${n}px`),(s.getComputedTextLength()>r||n<8||i<n)&&t.style("display","none")}),!1!==o.showValues&&P.append("text").attr("class","treemapValue").attr("x",e=>(e.x1-e.x0)/2).attr("y",function(e){return(e.y1-e.y0)/2}).attr("style",e=>"text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+$(e.data.name)+";"+(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(e,a)=>`url(#clip-${t}-${a})`).text(e=>e.value?u(e.value):"").each(function(e){let t=(0,c.ha)(this),a=this.parentNode;if(!a)return void t.style("display","none");let l=(0,c.ha)(a).select(".treemapLabel");if(l.empty()||"none"===l.style("display"))return void t.style("display","none");let s=parseFloat(l.style("font-size")),r=Math.max(6,Math.min(28,Math.round(.6*s)));t.style("font-size",`${r}px`);let i=(e.y1-e.y0)/2+s/2+2;t.attr("y",i);let n=e.x1-e.x0,o=e.y1-e.y0-4,d=n-8;t.node().getComputedTextLength()>d||i+r>o||r<6?t.style("display","none"):t.style("display",null)});let N=o.diagramPadding??8;(0,i.a)(g,N,"flowchart",o?.useMaxWidth||!1)},"draw"),getClasses:(0,d.a)(function(e,t){return t.db.getClasses()},"getClasses")},g={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},S=(0,d.a)(({treemap:e}={})=>{let t=(0,o.l)(g,e);return`\n  .treemapNode.section {\n    stroke: ${t.sectionStrokeColor};\n    stroke-width: ${t.sectionStrokeWidth};\n    fill: ${t.sectionFillColor};\n  }\n  .treemapNode.leaf {\n    stroke: ${t.leafStrokeColor};\n    stroke-width: ${t.leafStrokeWidth};\n    fill: ${t.leafFillColor};\n  }\n  .treemapLabel {\n    fill: ${t.labelColor};\n    font-size: ${t.labelFontSize};\n  }\n  .treemapValue {\n    fill: ${t.valueColor};\n    font-size: ${t.valueFontSize};\n  }\n  .treemapTitle {\n    fill: ${t.titleColor};\n    font-size: ${t.titleFontSize};\n  }\n  `},"getStyles"),x={parser:u,get db(){return new p},renderer:f,styles:S}}}]);